{"pageProps":{"breadcrumbs":[{"label":"Home","href":"/"},{"label":"Teams","href":"/teams"},{"label":"Product manager"}],"editPath":"/content/teams/product-manager.mdx","navItems":[{"label":"Home","href":"/"},{"label":"Culture","href":"/culture"},{"label":"Strategy","href":"/strategy"},{"label":"Teams","href":"/teams"},{"label":"Process","href":"/process"},{"label":"Resources","href":"/resources"}],"overview":"The product manager leads the multi-disciplinary team to deliver a product or service that meets users' needs.","sideNav":{"title":"Teams","titleLink":"/teams","items":[{"label":"Building a team","href":"/teams/building-teams","order":1},{"label":"Product manager","href":"/teams/product-manager","order":2},{"label":"Delivery manager","href":"/teams/delivery-manager","order":3},{"label":"Program management team","href":"/teams/management","order":4}]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {PageAlert} = _components;\n  if (!PageAlert) _missingMdxReference(\"PageAlert\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"The product manager plays a leading role in:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"setting the vision and roadmap for the product\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"working with the product's stakeholders\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"prioriting the backlog and what gets done in a sprint\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ensuring user stories are completed to a high quality\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The product manager works closely with the \", _jsx(_components.a, {\n        href: \"../delivery-manager/\",\n        children: \"delivery manager\"\n      }), \". This makes sure the team are working to achievable goals and are on track to deliver.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Setting the vision and roadmap\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It's the role of the product manager to define the vision for the product and communicate it with the team and stakeholders.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A good product vision aligns to both the user needs you've identified and the organisation's priorities.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The vision is often the end goal for a product roadmap that explains what features and milestones will be achieved along the way.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It's common for the vision and roadmap to be iterated over time, based on what the team learns from users and delivery.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Working with stakeholders\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The product manager is often the primary 'face' of the team to stakeholders inside and outside the department, like colleagues in operational areas or external industry groups.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By hearing the priorities of different stakeholders, the product manager can make informed decisions about the work to prioritise.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Stakeholders can be great advocates for the product and the team, and often give helpful feedback on features.\"\n    }), \"\\n\", _jsx(PageAlert, {\n      tone: \"warning\",\n      children: _jsx(_components.p, {\n        children: \"Stakeholder feedback is helpful, but it's not a substitute for good user\\nresearch. You'll hear different perspectives from both.\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Prioritising the backlog\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The product manager is responsible for the backlog, and gets the final say on which user stories are or aren't included in a sprint.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They are responsible for making sure that user stories have the right level of detail and clear acceptance criteria before they are prioritised.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In prioritising the backlog, the product manager has to balance:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"delivering new features\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"making improvements to existing features\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"fixing bugs and issues\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"addressing technical debt.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accepting stories when they're done\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The product manager plays an important role at the end of the process, by 'accepting' user stories as they are completed by the team.\"\n    }), \"\\n\", _jsx(PageAlert, {\n      tone: \"info\",\n      children: _jsx(_components.p, {\n        children: \"The requirements for a story, called the 'acceptance criteria', should be\\ndefined before the work begins.\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Accepting a user story means checking that the work has been completed to an acceptable level of quality.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This sometimes includes:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"checking if a feature has been released into the production environment\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"confirming that a fix has correctly addressed the issue\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"looking at analytics to understand if a new feature is meeting the user need.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"title":"Product manager","toc":[{"id":"setting-the-vision-and-roadmap","title":"Setting the vision and roadmap","level":2,"slug":"setting-the-vision-and-roadmap","items":[]},{"id":"working-with-stakeholders","title":"Working with stakeholders","level":2,"slug":"working-with-stakeholders","items":[]},{"id":"prioritising-the-backlog","title":"Prioritising the backlog","level":2,"slug":"prioritising-the-backlog","items":[]},{"id":"accepting-stories-when-theyre-done","title":"Accepting stories when they're done","level":2,"slug":"accepting-stories-when-theyre-done","items":[]}]},"__N_SSG":true}