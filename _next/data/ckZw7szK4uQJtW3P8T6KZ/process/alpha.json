{"pageProps":{"breadcrumbs":[{"label":"Home","href":"/"},{"label":"Process","href":"/process"},{"label":"Alpha stage"}],"editPath":"/content/process/alpha.mdx","navItems":[{"label":"Home","href":"/"},{"label":"Culture","href":"/culture"},{"label":"Strategy","href":"/strategy"},{"label":"Teams","href":"/teams"},{"label":"Process","href":"/process"}],"overview":"Alpha is an experimental stage. It’s an opportunity to use prototypes to work out the right thing to build.","sideNav":{"title":"Process","titleLink":"/process","items":[{"label":"Service design and delivery process","href":"/process/service-design-and-delivery-process","order":-1},{"label":"Mobilisation","href":"/process/mobilisation","order":1},{"label":"Discovery stage","href":"/process/discovery","order":2},{"label":"Alpha stage","href":"/process/alpha","order":3},{"label":"Beta stage","href":"/process/beta","order":4},{"label":"Live stage","href":"/process/live","order":5}]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {PageAlert} = _components;\n  if (!PageAlert) _missingMdxReference(\"PageAlert\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In Alpha stage you test the hypotheses that you reached at the end of Discovery stage. You will be exploring several design approaches (rather than just one solution).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As you progress through Alpha, you will produce new hypotheses as you discover new things about the users and service.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What to do in Alpha stage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In Alpha, you:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"take your hypotheses from Discovery stage and create some high-level concepts\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"continue to develop a vision for the service using your user journey and user story map\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"create storyboards to see possible solutions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"create prototypes to test hypotheses with users — you should explore hypotheses with different kinds and fidelity of prototypes\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"keep updating your decision register that contains the evidence that guides what you will build in Beta stage\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"identify service performance metrics\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"complete the stage by defining the minimum viable product (MVP).\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Prototype to find what works, not what's popular\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Alpha stage is not about validating what users like or dislike. You are finding out how well approaches will meet the actual needs of users.\"\n    }), \"\\n\", _jsx(PageAlert, {\n      tone: \"warning\",\n      children: _jsx(_components.p, {\n        children: \"Don't try to build a working service in Alpha stage. That comes in Beta stage.\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cycle through higher and lower fidelity prototypes to test different hypotheses with people.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use the prototype fidelity that matches the resolution of the design approach:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Quick paper prototypes (low fidelity) help teams test lots of general approaches.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Wireframe prototypes (medium fidelity) allow teams to more deeply explore an approach, building on lower fidelity prototyping.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Coded prototypes (high fidelity) give teams awareness of interaction and accessibility barriers to an approach.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"People are more likely to provide broader feedback if you show them something that is low fidelity and rough. Use higher fidelity prototypes to get more detailed feedback on a higher resolution design approach.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Defining the minimum viable product\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By the end of Alpha, you will need to have defined your Minimum Viable Product, or MVP.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"An MVP:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"provides value to users - it actually helps get something done\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"may focus on the specific needs of only a subset of users\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"works end-to-end along the ‘happy path’ (or ‘steel thread’)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Finishing Alpha stage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"At the end of the Alpha stage, you should have:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"user stories — they should relate to the overall user journey rather than being tied to individual features\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"a decision on whether to progress to Beta stage - if so a plan for your Beta stage and a less detailed plan for your Live stage\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"a decision on the metrics you will use and a measurement plan for how to capture them\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"a basic working system with limited functionality that you can demonstrate to users\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"an understanding of legacy systems you need to replace or integrate with\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"analysis on the user needs research you have done\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"a decision on your minimum viable product.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"At this point, you can decide to:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"move on to the Beta stage if your team is confident that you can create something that meets users’ needs and is cost effective, and you have the budget, capability and capacity to deliver the service\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"not to move onto Beta stage, if the solution may not meet user needs and is not cost effective\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"start a new Discovery stage.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"title":"Alpha stage","toc":[{"id":"what-to-do-in-alpha-stage","title":"What to do in Alpha stage","level":2,"slug":"what-to-do-in-alpha-stage","items":[]},{"id":"prototype-to-find-what-works-not-whats-popular","title":"Prototype to find what works, not what's popular","level":2,"slug":"prototype-to-find-what-works-not-whats-popular","items":[]},{"id":"defining-the-minimum-viable-product","title":"Defining the minimum viable product","level":2,"slug":"defining-the-minimum-viable-product","items":[]},{"id":"finishing-alpha-stage","title":"Finishing Alpha stage","level":2,"slug":"finishing-alpha-stage","items":[]}]},"__N_SSG":true}