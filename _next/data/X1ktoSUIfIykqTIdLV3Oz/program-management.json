{"pageProps":{"editPath":"/content/program-management/index.mdx","pageTitle":"Program management team","sidebarItems":[{"href":"/culture-values","label":"Culture and values","order":1,"items":[{"label":"Language guidelines","href":"/culture-values/language","order":1},{"label":"Mission patches","href":"/culture-values/mission-patches","order":2}]},{"href":"/strategy","label":"Service transformation strategy","order":2,"items":[{"href":"/strategy/agile","label":"Agile approaches","order":1,"items":[{"label":"Feedback loops","href":"/strategy/agile/feedback-loop","order":1},{"label":"Delivery sprints","href":"/strategy/agile/sprints","order":2}]},{"href":"/strategy/team-structure","label":"Structure of teams","order":2,"items":[]}]},{"href":"/program-management","label":"Program management team","order":3,"items":[]},{"href":"/teams","label":"Delivery teams","order":4,"items":[{"label":"Building a team","href":"/teams/building-teams","order":1},{"label":"Product manager","href":"/teams/product-manager","order":2},{"label":"Delivery manager","href":"/teams/delivery-manager","order":3}]},{"href":"/service-design-delivery-process","label":"Service design and delivery process","order":5,"items":[{"label":"Mobilisation","href":"/service-design-delivery-process/mobilisation","order":1},{"label":"Discovery stage","href":"/service-design-delivery-process/discovery","order":2},{"label":"Alpha stage","href":"/service-design-delivery-process/alpha","order":3},{"label":"Beta stage","href":"/service-design-delivery-process/beta","order":4},{"label":"Live stage","href":"/service-design-delivery-process/live","order":5}]},{"href":"/editing","label":"Editing the handbook","order":6,"items":[]}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {PageAlert} = _components;\n  if (!PageAlert) _missingMdxReference(\"PageAlert\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(PageAlert, {\n      tone: \"warning\",\n      children: \"Draft for discussion\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Delivery leads\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The delivery leads work at a service line level and support multiple product teams.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They understand:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"the service line deliverables for each product\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"what work is outstanding\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"the sequence of activities needed to achieve our commitments for the quarter and the tranche.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The leads set the right delivery expectations with stakeholders and manage issues and risk within a service line.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The role:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"anticipates delivery bottlenecks and proactively manage these\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"understands, manages and communicates change impacts\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"identifies and traverses technical and non-technical dependencies\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"resolves conflict between product- and program-centric priorities\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"reports clearly and concisely to support evidence-based decision making and assessment of trade-offs - this includes \", _jsx(_components.em, {\n          children: \"translating and communicating complex problems into easy-to-understand formats\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Issues and risk\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Delivery leads are responsible for ensuring issues and risks within a service line are documented and managed.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They provide a first line of escalation point for issues and risks from product teams.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They also interface between the service line and the broader program for issue and risk escalation and treatment.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Dependencies\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Delivery leads are accountable for managing dependencies within a service line and responsible for managing dependencies between service lines.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Planning and orchestration\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Delivery leads ensure teams within a service line have realistic and achievable plans for each quarter.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They ensure teams within a service line are appropriately coordinated and activities sequenced to avoid bottlenecks and cross-team delays.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Reporting\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Delivery leads are responsible for ensuring teams within a service line produce clear and meaningful reporting against milestones and agreed measures of success - OKRs (objectives and key results) and so on.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Leadership\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Delivery leads provide support, mentoring, guidance and advocacy for the delivery managers within the product teams.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"title":"Program management team","toc":[{"id":"delivery-leads","title":"Delivery leads","level":2,"slug":"delivery-leads","items":[{"id":"issues-and-risk","title":"Issues and risk","level":3,"slug":"issues-and-risk","items":[]},{"id":"dependencies","title":"Dependencies","level":3,"slug":"dependencies","items":[]},{"id":"planning-and-orchestration","title":"Planning and orchestration","level":3,"slug":"planning-and-orchestration","items":[]},{"id":"reporting","title":"Reporting","level":3,"slug":"reporting","items":[]},{"id":"leadership","title":"Leadership","level":3,"slug":"leadership","items":[]}]}]},"__N_SSG":true}